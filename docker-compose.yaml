version: '3'

services:
  app:
    container_name: app
    build:
      context: .
      network: host
    ports:
      - '8000:8000'
    depends_on:
      - redis-cluster
      - mongo
    env_file:
      - .env.development
    networks:
      default:
        ipv4_address: 165.34.0.20
    entrypoint: ['/bin/sh', '-c', 'npx prisma db push & npm start']
  nginx:
    image: nginx:1.21.3-alpine
    container_name: nginx
    extra_hosts:
      - 'dockerhost:165.34.0.20'
    ports:
      - 8080:8080
    volumes:
      - ./infra/local/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./infra/local/nginx/config:/etc/nginx/conf.d/config:ro
    depends_on:
      - app
    restart: on-failure
  mongo:
    build: ./infra/local/mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: prisma
      MONGO_INITDB_DATABASE: api
      MONGO_REPLICA_HOST: 127.0.0.1
      MONGO_REPLICA_PORT: 27017
    ports:
      - '27017:27017'
    restart: always # restart between reboots
    networks:
      - default
    healthcheck:
      test:
        [
          'CMD',
          'mongo',
          'admin',
          '--port',
          '27018',
          '--eval',
          "db.adminCommand('ping')"
        ]
      interval: 5s
      timeout: 2s
      retries: 20

  redis1:
    image: redis:alpine
    ports:
      - '7000:7000'
    volumes:
      - ./infra/local/conf/redis1.conf:/usr/local/etc/redis/redis.conf
    networks:
      default:
        ipv4_address: 165.34.0.10
    command: redis-server /usr/local/etc/redis/redis.conf
  redis2:
    image: redis:alpine
    ports:
      - '7001:7001'
    volumes:
      - ./infra/local/conf/redis2.conf:/usr/local/etc/redis/redis.conf
    networks:
      default:
        ipv4_address: 165.34.0.11
    command: redis-server /usr/local/etc/redis/redis.conf
  redis3:
    image: redis:alpine
    ports:
      - '7002:7002'
    volumes:
      - ./infra/local/conf/redis3.conf:/usr/local/etc/redis/redis.conf
    networks:
      default:
        ipv4_address: 165.34.0.12
    command: redis-server /usr/local/etc/redis/redis.conf
  redis-cluster:
    tty: true
    build:
      context: .
      dockerfile: ./infra/local/Dockerfile
    depends_on:
      - redis1
      - redis2
      - redis3
    networks:
      default:
        ipv4_address: 165.34.0.13
volumes:
  mongo_data:

networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 165.34.0.0/16
